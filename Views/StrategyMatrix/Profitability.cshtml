@{
    ViewBag.Title = "Profitability";
}

<style>
    .strategy-cell {
        position: relative;
        text-align: center;
        vertical-align: middle;
    }

    .action-buttons {
        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        gap: 8px;
        z-index: 10;
        background-color: rgba(255, 255, 255, 0.85);
        padding: 6px 8px;
        border-radius: 8px;
        box-shadow: 0 0 8px rgba(0,0,0,0.1);
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
    }

    .strategy-cell:hover .action-buttons {
        display: flex;
        opacity: 1;
        pointer-events: auto;
    }
</style>

<div class="page-inner">
    <div class="page-header">
        <h4 class="page-title">Profitability</h4>
        <ul class="breadcrumbs">
            <li class="nav-home">
                <a href="#">
                    <i class="flaticon-home"></i>
                </a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                <a href="#">Strategy Matrix</a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                <a href="#">Profitability</a>
            </li>
        </ul>
    </div>
    <!-- Inner Page -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="strategyTable">
                    <thead class="table-primary">
                        <tr>
                            <th>Strategy</th>
                            <th>Action Plan</th>
                            <th>KPI</th>
                            <th>Output</th>
                            <th>Lead Group</th>
                            <th>Support Group</th>
                            <th>Expense</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr>
                            <td colspan="7" class="text-center">
                                <a id="btnAddTools" class="btn btn-sm btn-success text-white" data-toggle="modal" data-target="#addStrategyModal">+ Add Strategy</a>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add Strategy Modal -->
<div class="modal fade" id="addStrategyModal" aria-labelledby="addStrategyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="addStrategyValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="addStrategyModalLabel">New Strategy</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group form-show-validation row">
                        <label for="title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="title" name="title" placeholder="Input title here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="description" class="col-4 mt-sm-2 text-left">Description <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="description" name="description" placeholder="Input description here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="strategic-goals" class="col-4 mt-sm-2 text-left">Strategic Goals <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="strategic-goals" name="strategic-goals" placeholder="Input strategic-goals here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="main-target" class="col-4 mt-sm-2 text-left">Main Target <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="main-target" name="main-target" placeholder="Input main-target here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="codification" class="col-4 mt-sm-2 text-left">Codification <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="codification" name="codification" placeholder="Input codification here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="strategic-pilar" class="col-4 mt-sm-2 text-left">Strategic Pilar <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="strategic-pilar" name="strategic-pilar" value="Profitability" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="tag" class="col-4 mt-sm-2 text-left">Tag <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="tag" name="tag" placeholder="Input tag here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="version-tag" class="col-4 mt-sm-2 text-left">Version Tag <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="version-tag" name="version-tag" placeholder="Input version-tag here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group font-weight-bold mt-3">SWOT Analysis</div>
                    <div class="form-group form-show-validation row">
                        <label for="strengths" class="col-4 mt-sm-2 text-left">Strengths <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="strengths" name="strengths" placeholder="Input strengths here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="weaknesses" class="col-4 mt-sm-2 text-left">Weaknesses <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="weaknesses" name="weaknesses" placeholder="Input weaknesses here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="opportunities" class="col-4 mt-sm-2 text-left">Opportunities <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="opportunities" name="opportunities" placeholder="Input opportunities here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="threats" class="col-4 mt-sm-2 text-left">Threats <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="threats" name="threats" placeholder="Input threats here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group font-weight-bold mt-3">SSC Analysis</div>
                    <div class="form-group form-show-validation row">
                        <label for="start" class="col-4 mt-sm-2 text-left">Start <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="start" name="start" placeholder="Input start here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="stop" class="col-4 mt-sm-2 text-left">Stop <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="stop" name="stop" placeholder="Input stop here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="continue" class="col-4 mt-sm-2 text-left">Continue <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="continue" name="continue" placeholder="Input continue here..." required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Action Plan Modal -->
<div class="modal fade" id="addActionPlanModal" aria-labelledby="addActionPlanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="addActionPlanValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="addActionPlanModalLabel">New Action Plan</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="strategy-id" name="strategy-id" placeholder="Input strategy-id here..." hidden>
                    <div class="form-group form-show-validation row">
                        <label for="title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="title" name="title" placeholder="Input title here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="select-lead-group" class="col-4 mt-sm-2 text-left">Lead Group <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="select2-input">
                                <select id="select-lead-group" name="select-lead-group" class="form-control">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="select-support-group" class="col-4 mt-sm-2 text-left">Support Group <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="select2-input">
                                <select id="select-support-group" name="select-support-group[]" class="form-control" multiple="multiple">
                                </select>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add KPI Modal -->
<div class="modal fade" id="addKPIModal" aria-labelledby="addKPIModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="addKPIValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="addKPIModalLabel">New KPI</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="action-plan-id" name="action-plan-id" placeholder="Input action-plan-id here..." hidden>
                    <div class="form-group form-show-validation row">
                        <label for="title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="title" name="title" placeholder="Input title here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="expense" class="col-4 mt-sm-2 text-left">Expense <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="number" step="0.0001" class="form-control" id="expense" name="expense" placeholder="Input expense here..." required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Output Modal -->
<div class="modal fade" id="addOutputModal" aria-labelledby="addOutputModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="addOutputValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="addOutputModalLabel">New Output</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="kpi-id" name="kpi-id" placeholder="Input kpi-id here..." hidden>
                    <div class="form-group form-show-validation row">
                        <label for="title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="title" name="title" placeholder="Input title here..." required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var token = sessionStorage.getItem("AccessToken");
        var userMaipark = sessionStorage.getItem("Username");
        var userRole = sessionStorage.getItem("UserRole");
        
        $(document).ready(function () {
            $('#navLink-2').addClass('nav-item active');

            // Hide button add strategy
            if (userRole) {
                var roleObj = JSON.parse(userRole);
                var roleName = roleObj.roleName;

                if (roleName !== "Group Head" && roleName !== "Administrator") {
                    $("#strategyTable tfoot").hide();
                }
            } else {
                // Jika userRole tidak ada di session, sembunyikan untuk jaga-jaga
                $("#strategyTable tfoot").hide();
            }

            // GET Lead Group & Support Group Data (GET Divisions)
            $.ajax({
                type: 'GET',
                url: 'http://sql-mvt-03/sprm/api/Lookup/GetDivisions',
                headers: { 'Authorization': 'Bearer ' + token },
                dataType: 'json',
                success: function (response) {
                    // Initials Lead Group
                    $('#select-lead-group').empty();
                    $('#select-lead-group').append('<option value="">Select Lead Group..</option>');

                    // Initials Support Group
                    $('#select-support-group').empty();
                    $('#select-support-group').append('<option value="">Select Support Group..</option>');
                    $('#select-support-group').append('<option value="All Group">All Group</option>');

                    // Feeding Data
                    $.each(response.data, function (index, item) {
                        $('#select-lead-group').append('<option value="' + item.initial + '"> ' + item.divName + '</option>');
                        $('#select-support-group').append('<option value="' + item.initial + '"> ' + item.divName + '</option>');
                    });

                    // Inisialisasi select2 Lead Group setelah opsi ditambahkan
                    $('#select-lead-group').select2({
                        theme: "bootstrap",
                        width: '100%',
                        placeholder: "Select Lead Group...",
                    });

                    // Inisialisasi select2 Support Group setelah opsi ditambahkan
                    $('#select-support-group').select2({
                        theme: "bootstrap",
                        width: '100%',
                        placeholder: "Select here...",
                        tags: true,
                    });
                }
            });

            /* validate */
            // handle validation add strategy
            $("#addStrategyValidation").validate({
                validClass: "success",
                rules: {
                    "title": {
                        required: true,
                    },
                    "description": {
                        required: true
                    },
                    "strategic-goals": {
                        required: true
                    },
                    "main-target": {
                        required: true
                    },
                    "codification": {
                        required: true
                    },
                    "tag": {
                        required: true
                    },
                    "version-tag": {
                        required: true
                    },
                    "strengths": {
                        required: true
                    },
                    "weaknesses": {
                        required: true
                    },
                    "opportunities": {
                        required: true
                    },
                    "threats": {
                        required: true
                    },
                    "start": {
                        required: true
                    },
                    "stop": {
                        required: true
                    },
                    "continue": {
                        required: true
                    },
                },
                messages: {
                    "title": {
                        required: "Please Input Title.",
                    },
                    "description": {
                        required: "Please Input Description.",
                    },
                    "strategic-goals": {
                        required: "Please Input Strategic Goals.",
                    },
                    "main-target": {
                        required: "Please Input Main Target.",
                    },
                    "codification": {
                        required: "Please Input Codification.",
                    },
                    "tag": {
                        required: "Please Input Tag.",
                    },
                    "version-tag": {
                        required: "Please Input Version Tag.",
                    },
                    "strengths": {
                        required: "Please Input Strengths.",
                    },
                    "weaknesses": {
                        required: "Please Input Weaknesses.",
                    },
                    "opportunities": {
                        required: "Please Input Opportunities.",
                    },
                    "threats": {
                        required: "Please Input Threats.",
                    },
                    "start": {
                        required: "Please Input Start.",
                    },
                    "stop": {
                        required: "Please Input Stop.",
                    },
                    "continue": {
                        required: "Please Input Continue.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      title: rawData['title'],
                      description: rawData['description'],
                      strategicGoals: rawData['strategic-goals'],
                      mainTarget: rawData['main-target'],
                      codification: rawData['codification'],
                      strategicPillar: rawData['strategic-pilar'],
                      tag: rawData['tag'],
                      versionTag: rawData['version-tag'],
                      strengths: rawData['strengths'],
                      weaknesses: rawData['weaknesses'],
                      opportunities: rawData['opportunities'],
                      threats: rawData['threats'],
                      stop: rawData['stop'],
                      start: rawData['start'],
                      continue: rawData['continue'],
                      createdBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/AddStrategy',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Added successfully!',
                                text: 'New Strategy has been added.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to added the strategy."
                            }).then(() => {
                                console.error('Unable to added the strategy', error);
                            });
                        }
                    });
                }
            });

            // handle validation add action plan
            $("#addActionPlanValidation").validate({
                validClass: "success",
                rules: {
                    "title": {
                        required: true,
                    },
                    "lead-group": {
                        required: true
                    },
                    "support-group[]": {
                        required: true
                    },
                },
                messages: {
                    "title": {
                        required: "Please Input Title.",
                    },
                    "lead-group": {
                        required: "Please Select Lead Group.",
                    },
                    "support-group[]": {
                        required: "Please Select Support Group.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());
                    var supportGroupValues = $('#select-support-group').val();

                    // Mapping ke camelCase
                    var jsonData = {
                      title: rawData['title'],
                      leadGroup: rawData['select-lead-group'],
                      supportGroup: supportGroupValues.join(", "),
                      strategyId: rawData['strategy-id'],
                      createdBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/AddActionPlan',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Added successfully!',
                                text: 'New action plan has been added.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to added the action plan."
                            }).then(() => {
                                console.error('Unable to added the action plan', error);
                            });
                        }
                    });
                }
            });

            // handle validation add kpi
            $("#addKPIValidation").validate({
                validClass: "success",
                rules: {
                    "title": {
                        required: true,
                    },
                    "expense": {
                        required: true
                    },
                },
                messages: {
                    "title": {
                        required: "Please Input Title.",
                    },
                    "expense": {
                        required: "Please Input Expense.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      title: rawData['title'],
                      expense: rawData['expense'],
                      actionPlanId: rawData['action-plan-id'],
                      createdBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/AddKPI',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Added successfully!',
                                text: 'New action plan has been added.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to added the action plan."
                            }).then(() => {
                                console.error('Unable to added the action plan', error);
                            });
                        }
                    });
                }
            });

            // handle validation add output
            $("#addOutputValidation").validate({
                validClass: "success",
                rules: {
                    "title": {
                        required: true,
                    },
                },
                messages: {
                    "title": {
                        required: "Please Input Title.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      title: rawData['title'],
                      kpiId: rawData['kpi-id'],
                      createdBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/AddOutput',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Added successfully!',
                                text: 'New action plan has been added.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to added the action plan."
                            }).then(() => {
                                console.error('Unable to added the action plan', error);
                            });
                        }
                    });
                }
            });
        });

        $(function() {
          const $tbody = $('#strategyTable tbody'),
                apiUrl = 'http://sql-mvt-03/sprm/api/StrategyMatrix';
          
          // Create UI table strategy
          function fetchAndRender() {
            // tampilkan loading
            $tbody.html('<tr><td colspan="7" class="text-center py-5">Loading…</td></tr>');

            $.ajax({
              url: apiUrl,
              method: 'GET',
              dataType: 'json',
              xhrFields: { withCredentials: true },
              headers: { 'Authorization': 'Bearer ' + token },
              success(res) {
                // filter Profitability
                const data = (res.data || []).filter(s => s.strategicPillar === 'Profitability');
                $tbody.empty();

                data.forEach(strategy => {
                  // hitung total rowspan untuk strategy
                  const stratRows = strategy.actionPlans.length
                    ? strategy.actionPlans.reduce((sum, ap) => {
                        if (ap.kpIs.length) {
                          return sum + ap.kpIs.reduce((s2, kpi) => s2 + Math.max(kpi.outputs.length, 1), 0);
                        }
                        return sum + 1;
                      }, 0)
                    : 1;

                  let stratRendered = false;

                  if (strategy.actionPlans.length) {
                    strategy.actionPlans.forEach(ap => {
                      // hitung rowspan untuk this AP
                      const apRows = ap.kpIs.length
                        ? ap.kpIs.reduce((s, kpi) => s + Math.max(kpi.outputs.length, 1), 0)
                        : 1;

                      let apRendered = false;  // <<< flag untuk AP

                      if (ap.kpIs.length) {
                        ap.kpIs.forEach(kpi => {
                          // hitung rowspan untuk this KPI
                          const kpiRows = Math.max(kpi.outputs.length, 1);
                          let kpiRendered = false;  // <<< flag untuk KPI

                          if (kpi.outputs.length) {
                            // ada Outputs
                            kpi.outputs.forEach(output => {
                              const $tr = $('<tr>');

                              // Strategy cell sekali
                              if (!stratRendered) {
                                $tr.append(`
                                    <td rowspan="${stratRows}" class="strategy-cell">
                                      <p class="text-left">${strategy.title}</p>
                                      ${
                                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                <button class="btn btn-sm btn-outline-primary btn-edit-str" data-strid="${strategy.id}" data-toggle="modal" data-target="#editStrategyModal" data-placement="top" title="Edit Strategy">
                                                  <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#addActionPlanModal" data-placement="top" title="Add Action Plan">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#deleteStrategyModal" data-placement="top" title="Delete Strategy">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                              </div>
                                            `
                                          : ''
                                      }
                                    </td>
                                `);
                                stratRendered = true;
                              }

                              // Action Plan cell sekali
                              if (!apRendered) {
                                $tr.append(`
                                    <td rowspan="${apRows}" class="strategy-cell">
                                      <p class="text-left">${ap.title}</p>
                                      ${
                                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                <button class="btn btn-sm btn-outline-primary btn-edit-ap" data-id="${ap.id}" data-toggle="modal" data-target="#editStrategyModal" data-placement="top" title="Edit Action Plan">
                                                  <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-kpi" data-apid="${ap.id}" data-toggle="modal" data-target="#addKPIModal" data-placement="top" title="Add KPI">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-id="${ap.id}" data-toggle="modal" data-target="#deleteStrategyModal" data-placement="top" title="Delete Action Plan">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                              </div>
                                            `
                                          : ''
                                      }
                                    </td>
                                `);
                                apRendered = true;
                              }

                              // KPI cell sekali
                              if (!kpiRendered) {
                                $tr.append(`
                                  <td rowspan="${kpiRows}" class="strategy-cell">
                                      <p class="text-left">${kpi.title}</p>
                                      ${
                                      (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                              <button class="btn btn-sm btn-outline-primary btn-edit-str" data-id="${kpi.id}" data-toggle="modal" data-target="#editKPIModal"  data-placement="top" title="Edit KPI">
                                                  <i class="fa fa-edit"></i>
                                              </button>
                                              <button class="btn btn-sm btn-outline-success btn-add-output" data-kpiid="${kpi.id}" data-toggle="modal" data-target="#addOutputModal" data-placement="top" title="Add Output">
                                                  <i class="fa fa-plus"></i>
                                              </button>
                                              <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-id="${kpi.id}" data-toggle="modal" data-target="#deleteKPIModal" data-placement="top" title="Delete KPI">
                                                  <i class="fa fa-trash"></i>
                                              </button>
                                              </div>
                                          `
                                          : ''
                                      }
                                  </td>
                                `);
                                kpiRendered = true;
                              }

                              // Output cell
                              $tr.append(`
                                <td class="strategy-cell">
                                  <p class="text-left">${output.title}</p>
                                  ${
                                  (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                      ? `
                                          <div class="action-buttons">
                                          <button class="btn btn-sm btn-outline-primary btn-edit-output" data-id="${output.id}" data-toggle="modal" data-target="#editOutputModal"  data-placement="top" title="Edit Output">
                                              <i class="fa fa-edit"></i>
                                          </button>
                                          <button class="btn btn-sm btn-outline-danger btn-delete-output" data-id="${output.id}" data-toggle="modal" data-target="#deleteOutputModal" data-placement="top" title="Delete Output">
                                              <i class="fa fa-trash"></i>
                                          </button>
                                          </div>
                                      `
                                      : ''
                                  }
                                </td>
                              `);

                              // Lead / Support / Expense
                              $tr.append(`<td>${ap.leadGroup || ''}</td>`);
                              $tr.append(`<td>${ap.supportGroup || ''}</td>`);
                              $tr.append(`
                                <td>
                                  ${
                                    kpi.expense
                                      ? kpi.expense.toLocaleString('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 4, maximumFractionDigits: 4 })
                                      : ''
                                  }
                                </td>
                              `);

                              $tbody.append($tr);
                            });

                          } else {
                            // KPI ada tapi no Outputs
                            const $tr = $('<tr>');

                            if (!stratRendered) {
                              $tr.append(`
                                    <td rowspan="${stratRows}" class="strategy-cell">
                                      <p class="text-left">${strategy.title}</p>
                                      ${
                                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                <button class="btn btn-sm btn-outline-primary btn-edit-str" data-strid="${strategy.id}" data-toggle="modal" data-target="#editStrategyModal" data-placement="top" title="Edit Strategy">
                                                  <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#addActionPlanModal" data-placement="top" title="Add Action Plan">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#deleteStrategyModal" data-placement="top" title="Delete Strategy">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                              </div>
                                            `
                                          : ''
                                      }
                                    </td>
                                `);
                              stratRendered = true;
                            }
                            if (!apRendered) {
                              $tr.append(`
                                    <td rowspan="${apRows}" class="strategy-cell">
                                      <p class="text-left">${ap.title}</p>
                                      ${
                                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                <button class="btn btn-sm btn-outline-primary btn-edit-ap" data-id="${ap.id}" data-toggle="modal" data-target="#editStrategyModal" data-placement="top" title="Edit Action Plan">
                                                  <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-kpi" data-apid="${ap.id}" data-toggle="modal" data-target="#addKPIModal" data-placement="top" title="Add KPI">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-id="${ap.id}" data-toggle="modal" data-target="#deleteStrategyModal" data-placement="top" title="Delete Action Plan">
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                              </div>
                                            `
                                          : ''
                                      }
                                    </td>
                                `);
                              apRendered = true;
                            }
                            if (!kpiRendered) {
                              $tr.append(`
                                <td rowspan="${kpiRows}" class="strategy-cell">
                                    <p class="text-left">${kpi.title}</p>
                                    ${
                                    (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                        ? `
                                            <div class="action-buttons">
                                            <button class="btn btn-sm btn-outline-primary btn-edit-str" data-id="${kpi.id}" data-toggle="modal" data-target="#editKPIModal"  data-placement="top" title="Edit KPI">
                                                <i class="fa fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-success btn-add-output" data-kpiid="${kpi.id}" data-toggle="modal" data-target="#addOutputModal" data-placement="top" title="Add Output">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-id="${kpi.id}" data-toggle="modal" data-target="#deleteKPIModal" data-placement="top" title="Delete KPI">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                            </div>
                                        `
                                        : ''
                                    }
                                </td>
                              `);
                              kpiRendered = true;
                            }

                            $tr.append(`
                              ${
                                (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                  ? `<td>
                                        <button class="btn btn-sm btn-outline-primary btn-add-output" data-toggle="modal" data-target="#addOutputModal" data-kpiid="${kpi.id}">+ Output</button>
                                      </td>`
                                  : '<td></td>'
                              }
                            `);
                            $tr.append(`<td>${ap.leadGroup || ''}</td>`);
                            $tr.append(`<td>${ap.supportGroup || ''}</td>`);
                            $tr.append(`<td>${kpi.expense
                              ? kpi.expense.toLocaleString('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 4, maximumFractionDigits: 4 })
                              : ''}</td>`);

                            $tbody.append($tr);
                          }
                        });

                      } else {
                        // AP ada tapi no KPI
                        const $tr = $('<tr>');

                        if (!stratRendered) {
                          $tr.append(`
                                <td rowspan="${stratRows}" class="strategy-cell">
                                    <p class="text-left">${strategy.title}</p>
                                    ${
                                    (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                        ? `
                                            <div class="action-buttons">
                                            <button class="btn btn-sm btn-outline-primary btn-edit-str" data-strid="${strategy.id}" data-toggle="modal" data-target="#editStrategyModal"  data-placement="top" title="Edit Strategy">
                                                <i class="fa fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-success btn-add-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#addActionPlanModal" data-placement="top" title="Add Action Plan">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#deleteStrategyModal" data-placement="top" title="Delete Strategy">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                            </div>
                                        `
                                        : ''
                                    }
                                </td>
                            `);
                          stratRendered = true;
                        }
                        if (!apRendered) {
                          $tr.append(`
                                <td rowspan="${apRows}" class="strategy-cell">
                                    <p class="text-left">${ap.title}</p>
                                    ${
                                    (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                        ? `
                                            <div class="action-buttons">
                                            <button class="btn btn-sm btn-outline-primary btn-edit-ap" data-id="${ap.id}" data-toggle="modal" data-target="#editStrategyModal" data-placement="top" title="Edit Action Plan">
                                                <i class="fa fa-edit"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-success btn-add-kpi" data-apid="${ap.id}" data-toggle="modal" data-target="#addKPIModal" data-placement="top" title="Add KPI">
                                                <i class="fa fa-plus"></i>
                                            </button>
                                            <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-id="${ap.id}" data-toggle="modal" data-target="#deleteStrategyModal" data-placement="top" title="Delete Action Plan">
                                                <i class="fa fa-trash"></i>
                                            </button>
                                            </div>
                                        `
                                        : ''
                                    }
                                </td>
                            `);
                          apRendered = true;
                        }

                        $tr.append(`
                          ${
                            (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                ? `<td>
                                     <button class="btn btn-sm btn-outline-primary btn-add-kpi" data-toggle="modal" data-target="#addKPIModal" data-apid="${ap.id}">+ KPI</button>
                                   </td>`
                                : '<td></td>'
                          }
                        `);
                        $tr.append('<td></td>');
                        $tr.append(`<td>${ap.leadGroup || ''}</td>`);
                        $tr.append(`<td>${ap.supportGroup || ''}</td>`);
                        $tr.append('<td></td>');

                        $tbody.append($tr);
                      }
                    });

                  } else {
                    // strategy belum punya AP sama sekali
                    const $tr = $('<tr>');
                    $tr.append(`
                        <td class="strategy-cell">
                          <p class="text-left">${strategy.title}</p>
                          ${
                            (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                              ? `
                                  <div class="action-buttons">
                                    <button class="btn btn-sm btn-outline-primary btn-edit-str" data-strid="${strategy.id}" data-toggle="modal" data-target="#editStrategyModal" data-placement="top" title="Edit Strategy">
                                      <i class="fa fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-success btn-add-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#addActionPlanModal" data-placement="top" title="Add Action Plan">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-danger btn-delete-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#deleteStrategyModal" data-placement="top" title="Delete Strategy">
                                        <i class="fa fa-trash"></i>
                                    </button>
                                  </div>
                                `
                              : ''
                          }
                        </td>
                    `);
                    $tr.append(`
                      ${
                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                          ? `<td>
                              <button type="button" class="btn btn-sm btn-outline-primary btn-add-ap" data-toggle="modal" data-target="#addActionPlanModal" data-strid="${strategy.id}">+ AP</button>
                            </td>`
                          : '<td></td>'
                      }
                    `);
                    $tr.append('<td></td><td></td><td></td><td></td><td></td>');
                    $tbody.append($tr);
                  }
                });
              },
              error() {
                $tbody.html('<tr><td colspan="7" class="text-danger text-center">Error loading data</td></tr>');
              }
            });
          }

          // event delegation untuk tombol edit/add
          $tbody
            .on('click', '.btn-add-ap',     e => $('#strategy-id').val(e.currentTarget.dataset.strid))
            .on('click', '.btn-edit-ap',    e => console.log(e.currentTarget.dataset.id))
            .on('click', '.btn-add-kpi',    e => $('#action-plan-id').val(e.currentTarget.dataset.apid))
            .on('click', '.btn-edit-kpi',   e => console.log(e.currentTarget.dataset.id))
            .on('click', '.btn-add-output', e => $('#kpi-id').val(e.currentTarget.dataset.kpiid))
            .on('click', '.btn-edit-output',e => console.log(e.currentTarget.dataset.id))

          // initial load
          fetchAndRender();
          $('[data-toggle="tooltip"]').tooltip('dispose').tooltip();
        });
    </script>
}