@{
    ViewBag.Title = "Sustainability";
}

<style>
    .strategy-cell {
        position: relative;
        text-align: center;
        vertical-align: middle;
    }

    .action-buttons {
        display: none;
        position: absolute;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        gap: 8px;
        z-index: 10;
        background-color: rgba(255, 255, 255, 0.85);
        padding: 6px 8px;
        border-radius: 8px;
        box-shadow: 0 0 8px rgba(0,0,0,0.1);
        opacity: 0;
        transition: opacity 0.3s ease;
        pointer-events: none;
    }

    .strategy-cell:hover .action-buttons {
        display: flex;
        opacity: 1;
        pointer-events: auto;
    }
</style>

<div class="page-inner">
    <div class="page-header">
        <h4 class="page-title">Sustainability</h4>
        <ul class="breadcrumbs">
            <li class="nav-home">
                <a href="#">
                    <i class="flaticon-home"></i>
                </a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                <a href="#">Strategy Matrix</a>
            </li>
            <li class="separator">
                <i class="flaticon-right-arrow"></i>
            </li>
            <li class="nav-item">
                <a href="#">Sustainability</a>
            </li>
        </ul>
    </div>
    <!-- Inner Page -->
    <div class="card">
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-bordered" id="strategyTable">
                    <thead class="table-primary">
                        <tr>
                            <th>Strategy</th>
                            <th>Action Plan</th>
                            <th>KPI</th>
                            <th>Output</th>
                            <th>Timeline</th>
                            <th>Lead Group</th>
                            <th>Support Group</th>
                            <th>Expense</th>
                        </tr>
                    </thead>
                    <tbody></tbody>
                    <tfoot>
                        <tr>
                            <td colspan="8" class="text-center">
                                <a class="btn btn-sm btn-success text-white btn-add-str" data-toggle="modal" data-target="#addStrategyModal">+ Add Strategy</a>
                            </td>
                        </tr>
                    </tfoot>
                </table>
            </div>
        </div>
    </div>
</div>

<!-- Add Strategy Modal -->
<div class="modal fade" id="addStrategyModal" aria-labelledby="addStrategyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="addStrategyValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="addStrategyModalLabel">New Strategy</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <div class="form-group form-show-validation row">
                        <label for="title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="title" name="title" placeholder="Input title here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="description" class="col-4 mt-sm-2 text-left">Description <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="description" name="description" placeholder="Input description here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="strategic-goals" class="col-4 mt-sm-2 text-left">Strategic Goals <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="strategic-goals" name="strategic-goals" placeholder="Input strategic-goals here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="main-target" class="col-4 mt-sm-2 text-left">Main Target <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="main-target" name="main-target" placeholder="Input main-target here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="codification" class="col-4 mt-sm-2 text-left">Codification <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="codification" name="codification" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="strategic-pilar" class="col-4 mt-sm-2 text-left">Strategic Pilar <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="strategic-pilar" name="strategic-pilar" value="Sustainability" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="tag" class="col-4 mt-sm-2 text-left">Tag <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="tag" name="tag" placeholder="Input tag here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="version-tag" class="col-4 mt-sm-2 text-left">Version Tag <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="version-tag" name="version-tag" placeholder="Input version-tag here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group font-weight-bold mt-3">SWOT Analysis</div>
                    <div class="form-group form-show-validation row">
                        <label for="strengths" class="col-4 mt-sm-2 text-left">Strengths <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="strengths" name="strengths" placeholder="Input strengths here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="weaknesses" class="col-4 mt-sm-2 text-left">Weaknesses <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="weaknesses" name="weaknesses" placeholder="Input weaknesses here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="opportunities" class="col-4 mt-sm-2 text-left">Opportunities <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="opportunities" name="opportunities" placeholder="Input opportunities here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="threats" class="col-4 mt-sm-2 text-left">Threats <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="threats" name="threats" placeholder="Input threats here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group font-weight-bold mt-3">SSC Analysis</div>
                    <div class="form-group form-show-validation row">
                        <label for="start" class="col-4 mt-sm-2 text-left">Start <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="start" name="start" placeholder="Input start here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="stop" class="col-4 mt-sm-2 text-left">Stop <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="stop" name="stop" placeholder="Input stop here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="continue" class="col-4 mt-sm-2 text-left">Continue <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="continue" name="continue" placeholder="Input continue here..." required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Action Plan Modal -->
<div class="modal fade" id="addActionPlanModal" aria-labelledby="addActionPlanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="addActionPlanValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="addActionPlanModalLabel">New Action Plan</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="strategy-id" name="strategy-id" placeholder="Input strategy-id here..." hidden>
                    <div class="form-group form-show-validation row">
                        <label for="title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="title" name="title" placeholder="Input title here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="ap-codification" class="col-4 mt-sm-2 text-left">Codification <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="ap-codification" name="ap-codification" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="select-lead-group" class="col-4 mt-sm-2 text-left">Lead Group <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="select2-input">
                                <select id="select-lead-group" name="select-lead-group" class="form-control">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="select-support-group" class="col-4 mt-sm-2 text-left">Support Group <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="select2-input">
                                <select id="select-support-group" name="select-support-group[]" class="form-control" multiple="multiple">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="start-date" class="col-4 mt-sm-2 text-left">Start Date <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group">
                                <input type="text" class="form-control" id="start-date" name="start-date" placeholder="Select date here..." required>
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="fa fa-calendar-o"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="due-date" class="col-4 mt-sm-2 text-left">Due Date <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group">
                                <input type="text" class="form-control" id="due-date" name="due-date" placeholder="Select date here..." required>
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="fa fa-calendar-o"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add KPI Modal -->
<div class="modal fade" id="addKPIModal" aria-labelledby="addKPIModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="addKPIValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="addKPIModalLabel">New KPI</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="action-plan-id" name="action-plan-id" placeholder="Input action-plan-id here..." hidden>
                    <div class="form-group form-show-validation row">
                        <label for="title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="title" name="title" placeholder="Input title here..." required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="expense" class="col-4 mt-sm-2 text-left">Expense <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="number" step="0.0001" class="form-control" id="expense" name="expense" placeholder="Input expense here..." required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Add Output Modal -->
<div class="modal fade" id="addOutputModal" aria-labelledby="addOutputModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="addOutputValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="addOutputModalLabel">New Output</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="kpi-id" name="kpi-id" placeholder="Input kpi-id here..." hidden>
                    <div class="form-group form-show-validation row">
                        <label for="title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="title" name="title" placeholder="Input title here..." required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Strategy Modal -->
<div class="modal fade" id="editStrategyModal" aria-labelledby="editStrategyModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="editStrategyValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="editStrategyModalLabel">Edit Strategy</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="edit-str-id" name="edit-str-id" hidden>
                    <div class="form-group form-show-validation row">
                        <label for="edit-str-title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-str-title" name="edit-str-title" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-str-desc" class="col-4 mt-sm-2 text-left">Description <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-str-desc" name="edit-str-desc" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-strategic-goals" class="col-4 mt-sm-2 text-left">Strategic Goals <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-strategic-goals" name="edit-strategic-goals" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-main-target" class="col-4 mt-sm-2 text-left">Main Target <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-main-target" name="edit-main-target" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-codification" class="col-4 mt-sm-2 text-left">Codification <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-codification" name="edit-codification" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-strategic-pilar" class="col-4 mt-sm-2 text-left">Strategic Pilar <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-strategic-pilar" name="edit-strategic-pilar" value="Sustainability" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-tag" class="col-4 mt-sm-2 text-left">Tag <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-tag" name="edit-tag" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-version-tag" class="col-4 mt-sm-2 text-left">Version Tag <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-version-tag" name="edit-version-tag" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group font-weight-bold mt-3">SWOT Analysis</div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-strengths" class="col-4 mt-sm-2 text-left">Strengths <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-strengths" name="edit-strengths" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-weaknesses" class="col-4 mt-sm-2 text-left">Weaknesses <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-weaknesses" name="edit-weaknesses" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-opportunities" class="col-4 mt-sm-2 text-left">Opportunities <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-opportunities" name="edit-opportunities" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-threats" class="col-4 mt-sm-2 text-left">Threats <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-threats" name="edit-threats" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group font-weight-bold mt-3">SSC Analysis</div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-start" class="col-4 mt-sm-2 text-left">Start <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-start" name="edit-start" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-stop" class="col-4 mt-sm-2 text-left">Stop <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-stop" name="edit-stop" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-continue" class="col-4 mt-sm-2 text-left">Continue <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-continue" name="edit-continue" required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Action Plan Modal -->
<div class="modal fade" id="editActionPlanModal" aria-labelledby="editActionPlanModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="editActionPlanValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="editActionPlanModalLabel">Edit Action Plan</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="edit-ap-id" name="edit-ap-id" hidden>
                    <div class="form-group form-show-validation row">
                        <label for="edit-ap-title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-ap-title" name="edit-ap-title" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-ap-codification" class="col-4 mt-sm-2 text-left">Codification <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-ap-codification" name="edit-ap-codification" readonly>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-select-lead-group" class="col-4 mt-sm-2 text-left">Lead Group <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="select2-input">
                                <select id="edit-select-lead-group" name="edit-select-lead-group" class="form-control">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-select-support-group" class="col-4 mt-sm-2 text-left">Support Group <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="select2-input">
                                <select id="edit-select-support-group" name="edit-select-support-group[]" class="form-control" multiple="multiple">
                                </select>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-start-date" class="col-4 mt-sm-2 text-left">Start Date <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group">
                                <input type="text" class="form-control" id="edit-start-date" name="edit-start-date" placeholder="Select date here..." required>
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="fa fa-calendar-o"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-due-date" class="col-4 mt-sm-2 text-left">Due Date <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group">
                                <input type="text" class="form-control" id="edit-due-date" name="edit-due-date" placeholder="Select date here..." required>
                                <div class="input-group-append">
                                    <span class="input-group-text">
                                        <i class="fa fa-calendar-o"></i>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit KPI Modal -->
<div class="modal fade" id="editKPIModal" aria-labelledby="editKPIModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="editKPIValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="editKPIModalLabel">Edit KPI</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="edit-kpi-id" name="edit-kpi-id" hidden>
                    <div class="form-group form-show-validation row">
                        <label for="edit-kpi-title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-kpi-title" name="edit-kpi-title" required>
                            </div>
                        </div>
                    </div>
                    <div class="form-group form-show-validation row">
                        <label for="edit-kpi-expense" class="col-4 mt-sm-2 text-left">Expense <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="number" step="0.0001" class="form-control" id="edit-kpi-expense" name="edit-kpi-expense" required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Output Modal -->
<div class="modal fade" id="editOutputModal" aria-labelledby="editOutputModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-dialog-scrollable modal-lg">
        <div class="modal-content">
            <form id="editOutputValidation" enctype="multipart/form-data">
                <div class="modal-header">
                    <h2 class="modal-title font-weight-bold" id="editOutputModalLabel">Edit Output</h2>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <input type="number" class="form-control" id="edit-output-id" name="edit-output-id" readonly>
                    <div class="form-group form-show-validation row">
                        <label for="edit-output-title" class="col-4 mt-sm-2 text-left">Title <span class="required-label">*</span></label>
                        <div class="col-8">
                            <div class="input-group mb-2">
                                <input type="text" class="form-control" id="edit-output-title" name="edit-output-title" required>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn" data-dismiss="modal">Close</button>
                    <button type="submit" class="btn btn-primary">Save</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        var token = sessionStorage.getItem("AccessToken");
        var userMaipark = sessionStorage.getItem("Username");
        var userRole = sessionStorage.getItem("UserRole");

        $(document).ready(function () {
            $('#navLink-2').addClass('nav-item active');

            // Inisialisasi datetimepicker
            $('#start-date, #due-date, #edit-start-date, #edit-due-date').datetimepicker({
                format: 'MM/YYYY',
                viewMode: 'months'
            });

            // Hide button add strategy
            if (userRole) {
                var roleObj = JSON.parse(userRole);
                var roleName = roleObj.roleName;

                if (roleName !== "Group Head" && roleName !== "Administrator") {
                    $("#strategyTable tfoot").hide();
                }
            } else {
                // Jika userRole tidak ada di session, sembunyikan untuk jaga-jaga
                $("#strategyTable tfoot").hide();
            }

            // GET Lead Group & Support Group Data (GET Divisions)
            $.ajax({
                type: 'GET',
                url: 'http://sql-mvt-03/sprm/api/Lookup/GetDivisions',
                headers: { 'Authorization': 'Bearer ' + token },
                dataType: 'json',
                success: function (response) {
                    // Initials Lead Group
                    $('#select-lead-group').empty();
                    $('#select-lead-group').append('<option value="">Select Lead Group..</option>');

                    // Initials Support Group
                    $('#select-support-group').empty();
                    $('#select-support-group').append('<option value="">Select Support Group..</option>');
                    $('#select-support-group').append('<option value="All Group">All Group</option>');
                    $('#edit-select-support-group').append('<option value="All Group">All Group</option>');

                    // Feeding Data
                    $.each(response.data, function (index, item) {
                        $('#select-lead-group').append('<option value="' + item.initial + '"> ' + item.divName + '</option>');
                        $('#select-support-group').append('<option value="' + item.initial + '"> ' + item.divName + '</option>');
                        $('#edit-select-lead-group').append('<option value="' + item.initial + '"> ' + item.divName + '</option>');
                        $('#edit-select-support-group').append('<option value="' + item.initial + '"> ' + item.divName + '</option>');
                    });

                    // Inisialisasi select2 Lead Group setelah opsi ditambahkan
                    $('#select-lead-group').select2({
                        theme: "bootstrap",
                        width: '100%',
                        placeholder: "Select Lead Group...",
                    });

                    $('#edit-select-lead-group').select2({
                        theme: "bootstrap",
                        width: '100%',
                        placeholder: "Select Lead Group...",
                    });

                    // Inisialisasi select2 Support Group setelah opsi ditambahkan
                    $('#select-support-group').select2({
                        theme: "bootstrap",
                        width: '100%',
                        placeholder: "Select here...",
                        tags: true,
                    });

                    $('#edit-select-support-group').select2({
                        theme: "bootstrap",
                        width: '100%',
                        placeholder: "Select here...",
                        tags: true,
                    });
                }
            });

            /* validate */
            // Custom method
            $.validator.addMethod("dueAfterStart", function(value, element, params) {
                var start = moment($(params).val(), 'MM/YYYY');
                var due = moment(value, 'MM/YYYY');
                return this.optional(element) || due.isSameOrAfter(start);
            }, "Due date must be the same or after start date.");

            // handle validation add strategy
            $("#addStrategyValidation").validate({
                validClass: "success",
                rules: {
                    "title": {
                        required: true,
                    },
                    "description": {
                        required: true
                    },
                    "strategic-goals": {
                        required: true
                    },
                    "main-target": {
                        required: true
                    },
                    "codification": {
                        required: true
                    },
                    "tag": {
                        required: true
                    },
                    "version-tag": {
                        required: true
                    },
                    "strengths": {
                        required: true
                    },
                    "weaknesses": {
                        required: true
                    },
                    "opportunities": {
                        required: true
                    },
                    "threats": {
                        required: true
                    },
                    "start": {
                        required: true
                    },
                    "stop": {
                        required: true
                    },
                    "continue": {
                        required: true
                    },
                },
                messages: {
                    "title": {
                        required: "Please Input Title.",
                    },
                    "description": {
                        required: "Please Input Description.",
                    },
                    "strategic-goals": {
                        required: "Please Input Strategic Goals.",
                    },
                    "main-target": {
                        required: "Please Input Main Target.",
                    },
                    "codification": {
                        required: "Please Input Codification.",
                    },
                    "tag": {
                        required: "Please Input Tag.",
                    },
                    "version-tag": {
                        required: "Please Input Version Tag.",
                    },
                    "strengths": {
                        required: "Please Input Strengths.",
                    },
                    "weaknesses": {
                        required: "Please Input Weaknesses.",
                    },
                    "opportunities": {
                        required: "Please Input Opportunities.",
                    },
                    "threats": {
                        required: "Please Input Threats.",
                    },
                    "start": {
                        required: "Please Input Start.",
                    },
                    "stop": {
                        required: "Please Input Stop.",
                    },
                    "continue": {
                        required: "Please Input Continue.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      title: rawData['title'],
                      description: rawData['description'],
                      strategicGoals: rawData['strategic-goals'],
                      mainTarget: rawData['main-target'],
                      codification: rawData['codification'],
                      strategicPillar: rawData['strategic-pilar'],
                      tag: rawData['tag'],
                      versionTag: rawData['version-tag'],
                      strengths: rawData['strengths'],
                      weaknesses: rawData['weaknesses'],
                      opportunities: rawData['opportunities'],
                      threats: rawData['threats'],
                      stop: rawData['stop'],
                      start: rawData['start'],
                      continue: rawData['continue'],
                      createdBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/AddStrategy',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Added successfully!',
                                text: 'New Strategy has been added.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to added the strategy."
                            }).then(() => {
                                console.error('Unable to added the strategy', error);
                            });
                        }
                    });
                }
            });

            // handle validation add action plan
            $("#addActionPlanValidation").validate({
                validClass: "success",
                rules: {
                    "title": {
                        required: true,
                    },
                    "select-lead-group": {
                        required: true
                    },
                    "select-support-group[]": {
                        required: true
                    },
                    "start-date": {
                        required: true
                    },
                    "due-date": {
                        required: true,
                        dueAfterStart: "#start-date"
                    }
                },
                messages: {
                    "title": {
                        required: "Please Input Title.",
                    },
                    "select-lead-group": {
                        required: "Please Select Lead Group.",
                    },
                    "select-support-group[]": {
                        required: "Please Select Support Group.",
                    },
                    "start-date": {
                        required: "Please Select Start Date",
                    },
                    "due-date": {
                        required: "Please Select Due Date",
                        dueAfterStart: "Due date must be the same or after start date."
                    }
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());
                    var supportGroupValues = $('#select-support-group').val();

                    // Mapping ke camelCase
                    var jsonData = {
                      title: rawData['title'],
                      leadGroup: rawData['select-lead-group'],
                      supportGroup: supportGroupValues.join(", "),
                      strategyId: rawData['strategy-id'],
                      codification: rawData['ap-codification'],
                      strategicPilar: "Sustainability",
                      timeline: `${rawData['start-date']} - ${rawData['due-date']}`,
                      createdBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/AddActionPlan',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Added successfully!',
                                text: 'New action plan has been added.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to added the action plan."
                            }).then(() => {
                                console.error('Unable to added the action plan', error);
                            });
                        }
                    });
                }
            });

            // handle validation add kpi
            $("#addKPIValidation").validate({
                validClass: "success",
                rules: {
                    "title": {
                        required: true,
                    },
                    "expense": {
                        required: true
                    },
                },
                messages: {
                    "title": {
                        required: "Please Input Title.",
                    },
                    "expense": {
                        required: "Please Input Expense.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      title: rawData['title'],
                      expense: rawData['expense'],
                      actionPlanId: rawData['action-plan-id'],
                      createdBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/AddKPI',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Added successfully!',
                                text: 'New KPI has been added.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to added the KPI."
                            }).then(() => {
                                console.error('Unable to added the KPI', error);
                            });
                        }
                    });
                }
            });

            // handle validation add output
            $("#addOutputValidation").validate({
                validClass: "success",
                rules: {
                    "title": {
                        required: true,
                    },
                },
                messages: {
                    "title": {
                        required: "Please Input Title.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      title: rawData['title'],
                      kpiId: rawData['kpi-id'],
                      createdBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/AddOutput',
                        type: 'POST',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Added successfully!',
                                text: 'New output has been added.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to added the output."
                            }).then(() => {
                                console.error('Unable to added the output', error);
                            });
                        }
                    });
                }
            });

            // handle validation edit strategy
            $("#editStrategyValidation").validate({
                validClass: "success",
                rules: {
                    "edit-str-title": {
                        required: true,
                    },
                    "edit-str-desc": {
                        required: true
                    },
                    "edit-strategic-goals": {
                        required: true
                    },
                    "edit-main-target": {
                        required: true
                    },
                    "edit-codification": {
                        required: true
                    },
                    "edit-tag": {
                        required: true
                    },
                    "edit-version-tag": {
                        required: true
                    },
                    "edit-strengths": {
                        required: true
                    },
                    "edit-weaknesses": {
                        required: true
                    },
                    "edit-opportunities": {
                        required: true
                    },
                    "edit-threats": {
                        required: true
                    },
                    "edit-start": {
                        required: true
                    },
                    "edit-stop": {
                        required: true
                    },
                    "edit-continue": {
                        required: true
                    },
                },
                messages: {
                    "edit-str-title": {
                        required: "Please Input Title.",
                    },
                    "edit-str-desc": {
                        required: "Please Input Description.",
                    },
                    "edit-strategic-goals": {
                        required: "Please Input Strategic Goals.",
                    },
                    "edit-main-target": {
                        required: "Please Input Main Target.",
                    },
                    "edit-codification": {
                        required: "Please Input Codification.",
                    },
                    "edit-tag": {
                        required: "Please Input Tag.",
                    },
                    "edit-version-tag": {
                        required: "Please Input Version Tag.",
                    },
                    "edit-strengths": {
                        required: "Please Input Strengths.",
                    },
                    "edit-weaknesses": {
                        required: "Please Input Weaknesses.",
                    },
                    "edit-opportunities": {
                        required: "Please Input Opportunities.",
                    },
                    "edit-threats": {
                        required: "Please Input Threats.",
                    },
                    "edit-start": {
                        required: "Please Input Start.",
                    },
                    "edit-stop": {
                        required: "Please Input Stop.",
                    },
                    "edit-continue": {
                        required: "Please Input Continue.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      id: rawData['edit-str-id'],
                      title: rawData['edit-str-title'],
                      description: rawData['edit-str-desc'],
                      strategicGoals: rawData['edit-strategic-goals'],
                      mainTarget: rawData['edit-main-target'],
                      codification: rawData['edit-codification'],
                      strategicPillar: rawData['edit-strategic-pilar'],
                      tag: rawData['edit-tag'],
                      versionTag: rawData['edit-version-tag'],
                      strengths: rawData['edit-strengths'],
                      weaknesses: rawData['edit-weaknesses'],
                      opportunities: rawData['edit-opportunities'],
                      threats: rawData['edit-threats'],
                      stop: rawData['edit-stop'],
                      start: rawData['edit-start'],
                      continue: rawData['edit-continue'],
                      lastUpdatedBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/UpdateStrategy',
                        type: 'PUT',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Update successfully!',
                                text: 'The Strategy has been updated.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to update the strategy."
                            }).then(() => {
                                console.error('Unable to update the strategy', error);
                            });
                        }
                    });
                }
            });

            // handle validation edit action plan
            $("#editActionPlanValidation").validate({
                validClass: "success",
                rules: {
                    "edit-ap-title": {
                        required: true,
                    },
                    "edit-select-lead-group": {
                        required: true
                    },
                    "edit-select-support-group[]": {
                        required: true
                    },
                    "edit-start-date": {
                        required: true
                    },
                    "edit-due-date": {
                        required: true,
                        dueAfterStart: "#edit-start-date"
                    }
                },
                messages: {
                    "edit-ap-title": {
                        required: "Please Input Title.",
                    },
                    "edit-select-lead-group": {
                        required: "Please Select Lead Group.",
                    },
                    "edit-select-support-group[]": {
                        required: "Please Select Support Group.",
                    },
                    "edit-start-date": {
                        required: "Please Select Start Date",
                    },
                    "edit-due-date": {
                        required: "Please Select Due Date",
                        dueAfterStart: "Due date must be the same or after start date."
                    }
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());
                    var supportGroupValues = $('#edit-select-support-group').val();

                    // Mapping ke camelCase
                    var jsonData = {
                      id: rawData['edit-ap-id'],
                      title: rawData['edit-ap-title'],
                      leadGroup: rawData['edit-select-lead-group'],
                      supportGroup: supportGroupValues.join(", "),
                      lastUpdatedBy: userMaipark,
                      timeline: `${rawData['edit-start-date']} - ${rawData['edit-due-date']}`
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/UpdateActionPlan',
                        type: 'PUT',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Update successfully!',
                                text: 'The action plan has been updated.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to update the action plan."
                            }).then(() => {
                                console.error('Unable to update the action plan', error);
                            });
                        }
                    });
                }
            });

            // handle validation edit kpi
            $("#editKPIValidation").validate({
                validClass: "success",
                rules: {
                    "edit-kpi-title": {
                        required: true,
                    },
                    "edit-kpi-expense": {
                        required: true
                    },
                },
                messages: {
                    "edit-kpi-title": {
                        required: "Please Input Title.",
                    },
                    "edit-kpi-expense": {
                        required: "Please Input Expense.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      id: rawData['edit-kpi-id'],
                      title: rawData['edit-kpi-title'],
                      expense: rawData['edit-kpi-expense'],
                      lastUpdatedBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/UpdateKPI',
                        type: 'PUT',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Update successfully!',
                                text: 'The KPI has been updated.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to update the kpi."
                            }).then(() => {
                                console.error('Unable to update the kpi', error);
                            });
                        }
                    });
                }
            });

            // handle validation edit output
            $("#editOutputValidation").validate({
                validClass: "success",
                rules: {
                    "edit-output-title": {
                        required: true,
                    },
                },
                messages: {
                    "edit-output-title": {
                        required: "Please Input Title.",
                    },
                },
                submitHandler: function (form) {
                    var formData = new FormData(form);
                    var rawData = Object.fromEntries(formData.entries());

                    // Mapping ke camelCase
                    var jsonData = {
                      id: rawData['edit-output-id'],
                      title: rawData['edit-output-title'],
                      lastUpdatedBy: userMaipark
                    };

                    // Mengirim data menggunakan Ajax
                    $.ajax({
                        url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/UpdateOutput',
                        type: 'PUT',
                        contentType: 'application/json',
                        headers: { 'Authorization': 'Bearer ' + token },
                        xhrFields: {
                            withCredentials: true
                        },
                        data: JSON.stringify(jsonData),
                        success: function (response) {
                            // Show SweetAlert2 success message
                            Swal.fire({
                                icon: 'success',
                                title: 'Update successfully!',
                                text: 'The output has been updated.',
                            }).then(() => {
                                // Refresh the user management page or perform any other actions
                                location.reload();
                            });
                        },
                        error: function (error) {
                            Swal.fire({
                                icon: "error",
                                title: "Oops...",
                                text: "Something went wrong. Unable to update the output."
                            }).then(() => {
                                console.error('Unable to update the output', error);
                            });
                        }
                    });
                }
            });
        });

        $(function() {
          const $tbody = $('#strategyTable tbody'),
                apiUrl = 'http://sql-mvt-03/sprm/api/StrategyMatrix';

          // Create UI table strategy
          function fetchAndRender() {
            // tampilkan loading
            $tbody.html('<tr><td colspan="7" class="text-center py-5">Loading…</td></tr>');

            $.ajax({
              url: apiUrl,
              method: 'GET',
              dataType: 'json',
              xhrFields: { withCredentials: true },
              headers: { 'Authorization': 'Bearer ' + token },
              success(res) {
                // filter Sustainability
                const data = (res.data || []).filter(s => s.strategicPillar === 'Sustainability');
                $tbody.empty();

                data.forEach(strategy => {
                  // hitung total rowspan untuk strategy
                  const stratRows = strategy.actionPlans.length
                    ? strategy.actionPlans.reduce((sum, ap) => {
                        if (ap.kpIs.length) {
                          return sum + ap.kpIs.reduce((s2, kpi) => s2 + Math.max(kpi.outputs.length, 1), 0);
                        }
                        return sum + 1;
                      }, 0)
                    : 1;

                  let stratRendered = false;

                  if (strategy.actionPlans.length) {
                    strategy.actionPlans.forEach(ap => {
                      // hitung rowspan untuk this AP
                      const apRows = ap.kpIs.length
                        ? ap.kpIs.reduce((s, kpi) => s + Math.max(kpi.outputs.length, 1), 0)
                        : 1;

                      let apRendered = false;
                      let divisionRendered = false;
                      let timelineRendered = false;

                      if (ap.kpIs.length) {
                        ap.kpIs.forEach(kpi => {
                          // hitung rowspan untuk this KPI
                          const kpiRows = Math.max(kpi.outputs.length, 1);
                          let kpiRendered = false;  // <<< flag untuk KPI
                          let expenseRendered = false;

                          if (kpi.outputs.length) {
                            // ada Outputs
                            kpi.outputs.forEach(output => {
                              const $tr = $('<tr>');

                              // Strategy cell sekali
                              if (!stratRendered) {
                                $tr.append(`
                                    <td rowspan="${stratRows}" class="strategy-cell">
                                      <p class="text-left">${strategy.title}</p>
                                      ${
                                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                <button
                                                    class="btn btn-sm btn-outline-primary btn-edit-str"
                                                    data-strid="${strategy.id}"
                                                    data-str-title="${strategy.title}"
                                                    data-str-desc="${strategy.description}"
                                                    data-strategic-goals="${strategy.strategicGoals}"
                                                    data-main-target="${strategy.mainTarget}"
                                                    data-codification="${strategy.codification}"
                                                    data-tag="${strategy.tag}"
                                                    data-version-tag="${strategy.versionTag}"
                                                    data-strengths="${strategy.strengths}"
                                                    data-weaknesses="${strategy.weaknesses}"
                                                    data-opportunities="${strategy.opportunities}"
                                                    data-threats="${strategy.threats}"
                                                    data-start="${strategy.start}"
                                                    data-stop="${strategy.stop}"
                                                    data-continue="${strategy.continue}"
                                                    data-toggle="modal"
                                                    data-target="#editStrategyModal"
                                                    data-placement="top"
                                                    title="Edit Strategy"
                                                >
                                                  <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#addActionPlanModal" data-placement="top" title="Add Action Plan">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button
                                                    class="btn btn-sm btn-outline-danger btn-delete-str"
                                                    data-strid="${strategy.id}"
                                                    data-title="${strategy.title}"
                                                    data-toggle="tooltip"
                                                    data-placement="top"
                                                    title="Delete Strategy"
                                                >
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                              </div>
                                            `
                                          : ''
                                      }
                                    </td>
                                `);
                                stratRendered = true;
                              }

                              // Action Plan cell sekali
                              if (!apRendered) {
                                $tr.append(`
                                    <td rowspan="${apRows}" class="strategy-cell">
                                      <p class="text-left">${ap.title}</p>
                                      ${
                                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                <button
                                                    class="btn btn-sm btn-outline-primary btn-edit-ap"
                                                    data-id="${ap.id}"
                                                    data-ap-title="${ap.title}"
                                                    data-select-lead-group="${ap.leadGroup}"
                                                    data-select-support-group="${ap.supportGroup}"
                                                    data-timeline="${ap.timeline}"
                                                    data-codification="${ap.codification}"
                                                    data-toggle="modal"
                                                    data-target="#editActionPlanModal"
                                                    data-placement="top"
                                                    title="Edit Action Plan"
                                                >
                                                  <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-kpi" data-apid="${ap.id}" data-toggle="modal" data-target="#addKPIModal" data-placement="top" title="Add KPI">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button
                                                    class="btn btn-sm btn-outline-danger btn-delete-ap"
                                                    data-apid="${ap.id}"
                                                    data-title="${ap.title}"
                                                    data-toggle="tooltip"
                                                    data-placement="top"
                                                    title="Delete Action Plan"
                                                >
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                              </div>
                                            `
                                          : ''
                                      }
                                    </td>
                                `);
                                apRendered = true;
                              }

                              // KPI cell sekali
                              if (!kpiRendered) {
                                $tr.append(`
                                  <td rowspan="${kpiRows}" class="strategy-cell">
                                      <p class="text-left">${kpi.title}</p>
                                      ${
                                      (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                  <button
                                                    class="btn btn-sm btn-outline-primary btn-edit-kpi"
                                                    data-id="${kpi.id}"
                                                    data-kpi-title="${kpi.title}"
                                                    data-kpi-expense="${kpi.expense}"
                                                    data-toggle="modal"
                                                    data-target="#editKPIModal"
                                                    data-placement="top"
                                                    title="Edit KPI"
                                                  >
                                                      <i class="fa fa-edit"></i>
                                                  </button>
                                                  <button class="btn btn-sm btn-outline-success btn-add-output" data-kpiid="${kpi.id}" data-toggle="modal" data-target="#addOutputModal" data-placement="top" title="Add Output">
                                                      <i class="fa fa-plus"></i>
                                                  </button>
                                                  <button
                                                    class="btn btn-sm btn-outline-danger btn-delete-kpi"
                                                    data-kpiid="${kpi.id}"
                                                    data-title="${kpi.title}"
                                                    data-toggle="tooltip"
                                                    data-placement="top"
                                                    title="Delete KPI"
                                                  >
                                                      <i class="fa fa-trash"></i>
                                                  </button>
                                              </div>
                                          `
                                          : ''
                                      }
                                  </td>
                                `);
                                kpiRendered = true;
                              }

                              // Output cell
                              $tr.append(`
                                <td class="strategy-cell">
                                  <p class="text-left">${output.title}</p>
                                  ${
                                  (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                      ? `
                                          <div class="action-buttons">
                                              <button
                                                class="btn btn-sm btn-outline-primary btn-edit-output"
                                                data-id="${output.id}"
                                                data-output-title="${output.title}"
                                                data-toggle="modal"
                                                data-target="#editOutputModal"
                                                data-placement="top"
                                                title="Edit Output"
                                              >
                                                  <i class="fa fa-edit"></i>
                                              </button>
                                              <button
                                                class="btn btn-sm btn-outline-danger btn-delete-output"
                                                data-outputid="${output.id}"
                                                data-title="${output.title}"
                                                data-toggle="tooltip"
                                                data-placement="top"
                                                title="Delete Output"
                                              >
                                                  <i class="fa fa-trash"></i>
                                              </button>
                                          </div>
                                      `
                                      : ''
                                  }
                                </td>
                              `);

                              // Timeline
                              if (!timelineRendered) {
                                $tr.append(`<td rowspan="${apRows}"><span class="badge badge-primary">${ap.timeline || ''}</span></td>`)
                                timelineRendered = true;
                              }

                              // Lead / Support / Expense
                              if (!divisionRendered) {
                                $tr.append(`<td rowspan="${apRows}">${ap.leadGroup || ''}</td>`);
                                $tr.append(`<td rowspan="${apRows}">${ap.supportGroup || ''}</td>`);
                                divisionRendered = true;
                              }
                              if (!expenseRendered) {
                                  $tr.append(`
                                    <td rowspan="${kpiRows}">
                                      ${
                                        kpi.expense
                                          ? kpi.expense.toLocaleString('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 4, maximumFractionDigits: 4 })
                                          : ''
                                      }
                                    </td>
                                  `);
                                  expenseRendered = true;
                              }
                              $tbody.append($tr);
                            });

                          } else {
                            // KPI ada tapi no Outputs
                            const $tr = $('<tr>');

                            if (!stratRendered) {
                              $tr.append(`
                                    <td rowspan="${stratRows}" class="strategy-cell">
                                      <p class="text-left">${strategy.title}</p>
                                      ${
                                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                <button
                                                    class="btn btn-sm btn-outline-primary btn-edit-str"
                                                    data-strid="${strategy.id}"
                                                    data-str-title="${strategy.title}"
                                                    data-str-desc="${strategy.description}"
                                                    data-strategic-goals="${strategy.strategicGoals}"
                                                    data-main-target="${strategy.mainTarget}"
                                                    data-codification="${strategy.codification}"
                                                    data-tag="${strategy.tag}"
                                                    data-version-tag="${strategy.versionTag}"
                                                    data-strengths="${strategy.strengths}"
                                                    data-weaknesses="${strategy.weaknesses}"
                                                    data-opportunities="${strategy.opportunities}"
                                                    data-threats="${strategy.threats}"
                                                    data-start="${strategy.start}"
                                                    data-stop="${strategy.stop}"
                                                    data-continue="${strategy.continue}"
                                                    data-toggle="modal"
                                                    data-target="#editStrategyModal"
                                                    data-placement="top"
                                                    title="Edit Strategy"
                                                >
                                                  <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#addActionPlanModal" data-placement="top" title="Add Action Plan">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button
                                                    class="btn btn-sm btn-outline-danger btn-delete-str"
                                                    data-strid="${strategy.id}"
                                                    data-title="${strategy.title}"
                                                    data-toggle="tooltip"
                                                    data-placement="top"
                                                    title="Delete Strategy"
                                                >
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                              </div>
                                            `
                                          : ''
                                      }
                                    </td>
                                `);
                              stratRendered = true;
                            }
                            if (!apRendered) {
                              $tr.append(`
                                    <td rowspan="${apRows}" class="strategy-cell">
                                      <p class="text-left">${ap.title}</p>
                                      ${
                                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                          ? `
                                              <div class="action-buttons">
                                                <button
                                                    class="btn btn-sm btn-outline-primary btn-edit-ap"
                                                    data-id="${ap.id}"
                                                    data-ap-title="${ap.title}"
                                                    data-select-lead-group="${ap.leadGroup}"
                                                    data-select-support-group="${ap.supportGroup}"
                                                    data-timeline="${ap.timeline}"
                                                    data-codification="${ap.codification}"
                                                    data-toggle="modal"
                                                    data-target="#editActionPlanModal"
                                                    data-placement="top"
                                                    title="Edit Action Plan"
                                                >
                                                  <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-kpi" data-apid="${ap.id}" data-toggle="modal" data-target="#addKPIModal" data-placement="top" title="Add KPI">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button
                                                    class="btn btn-sm btn-outline-danger btn-delete-ap"
                                                    data-apid="${ap.id}"
                                                    data-title="${ap.title}"
                                                    data-toggle="tooltip"
                                                    data-placement="top"
                                                    title="Delete Action Plan"
                                                >
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                              </div>
                                            `
                                          : ''
                                      }
                                    </td>
                                `);
                              apRendered = true;
                            }
                            if (!kpiRendered) {
                              $tr.append(`
                                <td rowspan="${kpiRows}" class="strategy-cell">
                                    <p class="text-left">${kpi.title}</p>
                                    ${
                                    (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                        ? `
                                            <div class="action-buttons">
                                              <button
                                                class="btn btn-sm btn-outline-primary btn-edit-kpi"
                                                data-id="${kpi.id}"
                                                data-kpi-title="${kpi.title}"
                                                data-kpi-expense="${kpi.expense}"
                                                data-toggle="modal"
                                                data-target="#editKPIModal"
                                                data-placement="top"
                                                title="Edit KPI"
                                              >
                                                  <i class="fa fa-edit"></i>
                                              </button>
                                              <button class="btn btn-sm btn-outline-success btn-add-output" data-kpiid="${kpi.id}" data-toggle="modal" data-target="#addOutputModal" data-placement="top" title="Add Output">
                                                  <i class="fa fa-plus"></i>
                                              </button>
                                              <button
                                                class="btn btn-sm btn-outline-danger btn-delete-kpi"
                                                data-kpiid="${kpi.id}"
                                                data-title="${kpi.title}"
                                                data-toggle="tooltip"
                                                data-placement="top"
                                                title="Delete KPI"
                                              >
                                                <i class="fa fa-trash"></i>
                                              </button>
                                            </div>
                                        `
                                        : ''
                                    }
                                </td>
                              `);
                              kpiRendered = true;
                            }

                            $tr.append(`
                              ${
                                (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                  ? `<td>
                                        <button class="btn btn-sm btn-outline-primary btn-add-output" data-toggle="modal" data-target="#addOutputModal" data-kpiid="${kpi.id}">+ Output</button>
                                      </td>`
                                  : '<td></td>'
                              }
                            `);

                            // Timeline
                            if (!timelineRendered) {
                                $tr.append(`<td rowspan="${apRows}"><span class="badge badge-primary">${ap.timeline || ''}</span></td>`)
                                timelineRendered = true;
                            }

                            if (!divisionRendered) {
                              $tr.append(`<td rowspan="${apRows}">${ap.leadGroup || ''}</td>`);
                              $tr.append(`<td rowspan="${apRows}">${ap.supportGroup || ''}</td>`);
                              divisionRendered = true;
                            }
                            $tr.append(`<td>${kpi.expense
                              ? kpi.expense.toLocaleString('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 4, maximumFractionDigits: 4 })
                              : ''
                            }</td>`);

                            $tbody.append($tr);
                          }
                        });
                      } else {
                        // AP ada tapi no KPI
                        const $tr = $('<tr>');

                        if (!stratRendered) {
                          $tr.append(`
                                <td rowspan="${stratRows}" class="strategy-cell">
                                    <p class="text-left">${strategy.title}</p>
                                    ${
                                    (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                        ? `
                                            <div class="action-buttons">
                                                <button
                                                    class="btn btn-sm btn-outline-primary btn-edit-str"
                                                    data-strid="${strategy.id}"
                                                    data-str-title="${strategy.title}"
                                                    data-str-desc="${strategy.description}"
                                                    data-strategic-goals="${strategy.strategicGoals}"
                                                    data-main-target="${strategy.mainTarget}"
                                                    data-codification="${strategy.codification}"
                                                    data-tag="${strategy.tag}"
                                                    data-version-tag="${strategy.versionTag}"
                                                    data-strengths="${strategy.strengths}"
                                                    data-weaknesses="${strategy.weaknesses}"
                                                    data-opportunities="${strategy.opportunities}"
                                                    data-threats="${strategy.threats}"
                                                    data-start="${strategy.start}"
                                                    data-stop="${strategy.stop}"
                                                    data-continue="${strategy.continue}"
                                                    data-toggle="modal"
                                                    data-target="#editStrategyModal"
                                                    data-placement="top"
                                                    title="Edit Strategy"
                                                >
                                                    <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#addActionPlanModal" data-placement="top" title="Add Action Plan">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button
                                                    class="btn btn-sm btn-outline-danger btn-delete-str"
                                                    data-strid="${strategy.id}"
                                                    data-title="${strategy.title}"
                                                    data-toggle="tooltip"
                                                    data-placement="top"
                                                    title="Delete Strategy"
                                                >
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </div>
                                        `
                                        : ''
                                    }
                                </td>
                            `);
                          stratRendered = true;
                        }
                        if (!apRendered) {
                          $tr.append(`
                                <td rowspan="${apRows}" class="strategy-cell">
                                    <p class="text-left">${ap.title}</p>
                                    ${
                                    (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                        ? `
                                            <div class="action-buttons">
                                                <button
                                                    class="btn btn-sm btn-outline-primary btn-edit-ap"
                                                    data-id="${ap.id}"
                                                    data-ap-title="${ap.title}"
                                                    data-select-lead-group="${ap.leadGroup}"
                                                    data-select-support-group="${ap.supportGroup}"
                                                    data-timeline="${ap.timeline}"
                                                    data-codification="${ap.codification}"
                                                    data-toggle="modal"
                                                    data-target="#editActionPlanModal"
                                                    data-placement="top"
                                                    title="Edit Action Plan"
                                                >
                                                    <i class="fa fa-edit"></i>
                                                </button>
                                                <button class="btn btn-sm btn-outline-success btn-add-kpi" data-apid="${ap.id}" data-toggle="modal" data-target="#addKPIModal" data-placement="top" title="Add KPI">
                                                    <i class="fa fa-plus"></i>
                                                </button>
                                                <button
                                                    class="btn btn-sm btn-outline-danger btn-delete-ap"
                                                    data-apid="${ap.id}"
                                                    data-title="${ap.title}"
                                                    data-toggle="tooltip"
                                                    data-placement="top"
                                                    title="Delete Action Plan"
                                                >
                                                    <i class="fa fa-trash"></i>
                                                </button>
                                            </div>
                                        `
                                        : ''
                                    }
                                </td>
                            `);
                          apRendered = true;
                        }

                        $tr.append(`
                          ${
                            (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                                ? `<td>
                                     <button class="btn btn-sm btn-outline-primary btn-add-kpi" data-toggle="modal" data-target="#addKPIModal" data-apid="${ap.id}">+ KPI</button>
                                   </td>`
                                : '<td></td>'
                          }
                        `);
                        $tr.append('<td></td>');
                        // Timeline
                        if (!timelineRendered) {
                            $tr.append(`<td rowspan="${apRows}"><span class="badge badge-primary">${ap.timeline || ''}</span></td>`)
                            timelineRendered = true;
                        }
                        if (!divisionRendered) {
                            $tr.append(`<td rowspan="${apRows}">${ap.leadGroup || ''}</td>`);
                            $tr.append(`<td rowspan="${apRows}">${ap.supportGroup || ''}</td>`);
                            divisionRendered = true;
                        }
                        $tr.append('<td></td>');

                        $tbody.append($tr);
                      }
                    });

                  } else {
                    // strategy belum punya AP sama sekali
                    const $tr = $('<tr>');
                    $tr.append(`
                        <td class="strategy-cell">
                          <p class="text-left">${strategy.title}</p>
                          ${
                            (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                              ? `
                                  <div class="action-buttons">
                                    <button
                                        class="btn btn-sm btn-outline-primary btn-edit-str"
                                        data-strid="${strategy.id}"
                                        data-str-title="${strategy.title}"
                                        data-str-desc="${strategy.description}"
                                        data-strategic-goals="${strategy.strategicGoals}"
                                        data-main-target="${strategy.mainTarget}"
                                        data-codification="${strategy.codification}"
                                        data-tag="${strategy.tag}"
                                        data-version-tag="${strategy.versionTag}"
                                        data-strengths="${strategy.strengths}"
                                        data-weaknesses="${strategy.weaknesses}"
                                        data-opportunities="${strategy.opportunities}"
                                        data-threats="${strategy.threats}"
                                        data-start="${strategy.start}"
                                        data-stop="${strategy.stop}"
                                        data-continue="${strategy.continue}"
                                        data-toggle="modal"
                                        data-target="#editStrategyModal"
                                        data-placement="top"
                                        title="Edit Strategy"
                                    >
                                        <i class="fa fa-edit"></i>
                                    </button>
                                    <button class="btn btn-sm btn-outline-success btn-add-ap" data-strid="${strategy.id}" data-toggle="modal" data-target="#addActionPlanModal" data-placement="top" title="Add Action Plan">
                                        <i class="fa fa-plus"></i>
                                    </button>
                                    <button
                                        class="btn btn-sm btn-outline-danger btn-delete-str"
                                        data-strid="${strategy.id}"
                                        data-title="${strategy.title}"
                                        data-toggle="tooltip"
                                        data-placement="top"
                                        title="Delete Strategy"
                                    >
                                        <i class="fa fa-trash"></i>
                                    </button>
                                  </div>
                                `
                              : ''
                          }
                        </td>
                    `);
                    $tr.append(`
                      ${
                        (strategy.createdBy === userMaipark || JSON.parse(userRole).roleName === "Administrator")
                          ? `<td>
                              <button type="button" class="btn btn-sm btn-outline-primary btn-add-ap" data-toggle="modal" data-target="#addActionPlanModal" data-strid="${strategy.id}">+ AP</button>
                            </td>`
                          : '<td></td>'
                      }
                    `);
                    $tr.append('<td></td><td></td><td></td><td></td><td></td><td></td>');
                    $tbody.append($tr);
                  }
                });
              },
              error() {
                $tbody.html('<tr><td colspan="8" class="text-danger text-center">Error loading data</td></tr>');
              }
            });
          }

          // event delegation untuk tombol edit/add/delete
          $('#strategyTable tfoot')
            .on('click', '.btn-add-str', e => {
                $.ajax({
                    url: 'http://sql-mvt-03/sprm/api/Lookup/GetCodification',
                    type: 'GET',
                    data: { type: 'STR', pilar: 'STNB' },
                    headers: { 'Authorization': 'Bearer ' + token },
                    success: function (response) {
                        $('#codification').val(response.data.no);
                    },
                    error: function (error) {
                        // Tampilkan sweet alert jika terjadi kesalahan
                        console.error('Failed to load the codification no', error);
                    }
                });
            });

          $tbody
            .on('click', '.btn-edit-str', e => {
                const btn = e.currentTarget.dataset;
                $('#edit-str-id').val(btn.strid);
                $('#edit-str-title').val(btn.strTitle);
                $('#edit-str-desc').val(btn.strDesc);
                $('#edit-strategic-goals').val(btn.strategicGoals);
                $('#edit-main-target').val(btn.mainTarget);
                $('#edit-codification').val(btn.codification);
                $('#edit-tag').val(btn.tag);
                $('#edit-version-tag').val(btn.versionTag);
                $('#edit-strengths').val(btn.strengths);
                $('#edit-weaknesses').val(btn.weaknesses);
                $('#edit-opportunities').val(btn.opportunities);
                $('#edit-threats').val(btn.threats);
                $('#edit-start').val(btn.start);
                $('#edit-stop').val(btn.stop);
                $('#edit-continue').val(btn.continue);
            })
            .on('click', '.btn-delete-str', e => {
                const btn = e.currentTarget.dataset;
                const strId = btn.strid,
                      strTitle = btn.title;

                // Menampilkan sweet alert konfirmasi
                Swal.fire({
                    title: "Are you sure?",
                    text: "You want to Delete this Strategy? (" + strTitle + ")",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, Delete!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/DeleteStrategy?id=' + strId + '&deletedBy=' + userMaipark,
                            type: 'DELETE',
                            xhrFields: { withCredentials: true },
                            headers: { 'Authorization': 'Bearer ' + token },
                            success: function (response) {
                                Swal.fire({
                                    title: "Delete successful!",
                                    text: "The strategy has been deleted.",
                                    icon: "success"
                                }).then(() => {
                                    //console.log("Button Delete Clicked");
                                    location.reload();
                                });
                            },
                            error: function (error) {
                                // Tampilkan sweet alert jika terjadi kesalahan
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Something went wrong. Unable to delete the strategy."
                                }).then(() => {
                                    console.error('Delete strategy failed', error);
                                });
                            }
                        });
                    }
                });
            })
            .on('click', '.btn-add-ap', e => {
                $('#strategy-id').val(e.currentTarget.dataset.strid)
                $.ajax({
                    url: 'http://sql-mvt-03/sprm/api/Lookup/GetCodification',
                    type: 'GET',
                    data: { type: 'APN', pilar: 'STNB' },
                    headers: { 'Authorization': 'Bearer ' + token },
                    success: function (response) {
                        $('#ap-codification').val(response.data.no);
                    },
                    error: function (error) {
                        // Tampilkan sweet alert jika terjadi kesalahan
                        console.error('Failed to load the codification no', error);
                    }
                });
            })
            .on('click', '.btn-edit-ap', e => {
                const btn = e.currentTarget.dataset;
                $('#edit-ap-id').val(btn.id);
                $('#edit-ap-title').val(btn.apTitle);
                $('#edit-ap-codification').val(btn.codification);

                const [start, due] = btn.timeline.split(' - ');
                $('#edit-start-date').datetimepicker('date', moment(start, 'MM/YYYY'));
                $('#edit-due-date').datetimepicker('date', moment(due, 'MM/YYYY'));

                // Lead Group
                $('#edit-select-lead-group').val(btn.selectLeadGroup).trigger('change');

                // Support Group
                const supportGroups = btn.selectSupportGroup.split(',').map(s => s.trim());

                // Tambahkan ke select2 jika belum ada opsinya
                supportGroups.forEach(group => {
                    if ($("#edit-select-support-group option[value='" + group + "']").length === 0) {
                        $('#edit-select-support-group').append(`<option value="${group}">${group}</option>`);
                    }
                });

                // Set value dan trigger change agar select2 nge-render ulang
                $('#edit-select-support-group').val(supportGroups).trigger('change');
            })
            .on('click', '.btn-delete-ap', e => {
                const btn = e.currentTarget.dataset;
                const apId = btn.apid,
                      apTitle = btn.title;

                // Menampilkan sweet alert konfirmasi
                Swal.fire({
                    title: "Are you sure?",
                    text: "You want to Delete this Action Plan? (" + apTitle + ")",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, Delete!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/DeleteActionPlan?id=' + apId + '&deletedBy=' + userMaipark,
                            type: 'DELETE',
                            xhrFields: { withCredentials: true },
                            headers: { 'Authorization': 'Bearer ' + token },
                            success: function (response) {
                                Swal.fire({
                                    title: "Delete successful!",
                                    text: "The Action Plan has been deleted.",
                                    icon: "success"
                                }).then(() => {
                                    //console.log("Button Delete Clicked");
                                    location.reload();
                                });
                            },
                            error: function (error) {
                                // Tampilkan sweet alert jika terjadi kesalahan
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Something went wrong. Unable to delete the action plan."
                                }).then(() => {
                                    console.error('Delete action plan failed', error);
                                });
                            }
                        });
                    }
                });
            })
            .on('click', '.btn-add-kpi',    e => $('#action-plan-id').val(e.currentTarget.dataset.apid))
            .on('click', '.btn-edit-kpi',   e => {
                const btn = e.currentTarget.dataset;
                $('#edit-kpi-id').val(btn.id);
                $('#edit-kpi-title').val(btn.kpiTitle);
                $('#edit-kpi-expense').val(btn.kpiExpense);
            })
            .on('click', '.btn-delete-kpi', e => {
                const btn = e.currentTarget.dataset;
                const kpiId = btn.kpiid,
                      kpiTitle = btn.title;

                // Menampilkan sweet alert konfirmasi
                Swal.fire({
                    title: "Are you sure?",
                    text: "You want to Delete this KPI? (" + kpiTitle + ")",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, Delete!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/DeleteKPI?id=' + kpiId + '&deletedBy=' + userMaipark,
                            type: 'DELETE',
                            xhrFields: { withCredentials: true },
                            headers: { 'Authorization': 'Bearer ' + token },
                            success: function (response) {
                                Swal.fire({
                                    title: "Delete successful!",
                                    text: "The KPI has been deleted.",
                                    icon: "success"
                                }).then(() => {
                                    //console.log("Button Delete Clicked");
                                    location.reload();
                                });
                            },
                            error: function (error) {
                                // Tampilkan sweet alert jika terjadi kesalahan
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Something went wrong. Unable to delete the KPI."
                                }).then(() => {
                                    console.error('Delete KPI failed', error);
                                });
                            }
                        });
                    }
                });
            })
            .on('click', '.btn-add-output', e => $('#kpi-id').val(e.currentTarget.dataset.kpiid))
            .on('click', '.btn-edit-output',e => {
                const btn = e.currentTarget.dataset;
                $('#edit-output-id').val(btn.id);
                $('#edit-output-title').val(btn.outputTitle);
            })
            .on('click', '.btn-delete-output', e => {
                const btn = e.currentTarget.dataset;
                const outputId = btn.outputid,
                      outputTitle = btn.title;

                // Menampilkan sweet alert konfirmasi
                Swal.fire({
                    title: "Are you sure?",
                    text: "You want to Delete this Output? (" + outputTitle + ")",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonColor: "#3085d6",
                    cancelButtonColor: "#d33",
                    confirmButtonText: "Yes, Delete!"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.ajax({
                            url: 'http://sql-mvt-03/sprm/api/StrategyMatrix/DeleteOutput?id=' + outputId + '&deletedBy=' + userMaipark,
                            type: 'DELETE',
                            xhrFields: { withCredentials: true },
                            headers: { 'Authorization': 'Bearer ' + token },
                            success: function (response) {
                                Swal.fire({
                                    title: "Delete successful!",
                                    text: "The output has been deleted.",
                                    icon: "success"
                                }).then(() => {
                                    //console.log("Button Delete Clicked");
                                    location.reload();
                                });
                            },
                            error: function (error) {
                                // Tampilkan sweet alert jika terjadi kesalahan
                                Swal.fire({
                                    icon: "error",
                                    title: "Oops...",
                                    text: "Something went wrong. Unable to delete the output."
                                }).then(() => {
                                    console.error('Delete output failed', error);
                                });
                            }
                        });
                    }
                });
            })

          // initial load
          fetchAndRender();
          $('[data-toggle="tooltip"]').tooltip('dispose').tooltip();
        });
    </script>
}